{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlefrancois/code/react-yoga/tailwind-yoga/frontend/src/components/adminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    // Add your authentication logic here\n    // For simplicity, let's use hardcoded credentials\n    if (username === 'admin' && password === 'password') {\n      onLogin(); // Call the onLogin function passed as a prop\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-6\",\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        htmlFor: \"username\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"border border-gray-400 p-2 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        htmlFor: \"password\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"border border-gray-400 p-2 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"bg-blue-500 text-white py-2 px-4 rounded\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminLogin","onLogin","_s","username","setUsername","password","setPassword","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/christopherlefrancois/code/react-yoga/tailwind-yoga/frontend/src/components/adminLogin.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AdminLogin = ({ onLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    // Add your authentication logic here\n    // For simplicity, let's use hardcoded credentials\n    if (username === 'admin' && password === 'password') {\n      onLogin(); // Call the onLogin function passed as a prop\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-8\">\n      <h1 className=\"text-4xl font-bold mb-6\">Admin Login</h1>\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <label className=\"block mb-2\" htmlFor=\"username\">\n          Username:\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"border border-gray-400 p-2 w-full\"\n          />\n        </label>\n        <label className=\"block mb-2\" htmlFor=\"password\">\n          Password:\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"border border-gray-400 p-2 w-full\"\n          />\n        </label>\n        <button onClick={handleLogin} className=\"bg-blue-500 text-white py-2 px-4 rounded\">\n          Login\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminLogin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA,IAAIJ,QAAQ,KAAK,OAAO,IAAIE,QAAQ,KAAK,UAAU,EAAE;MACnDJ,OAAO,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,MAAM;MACLO,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCX,OAAA;MAAIU,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDf,OAAA;MAAKU,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDX,OAAA;QAAOU,SAAS,EAAC,YAAY;QAACM,OAAO,EAAC,UAAU;QAAAL,QAAA,GAAC,WAE/C,eAAAX,OAAA;UACEiB,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,UAAU;UACbC,KAAK,EAAEf,QAAS;UAChBgB,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CT,SAAS,EAAC;QAAmC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRf,OAAA;QAAOU,SAAS,EAAC,YAAY;QAACM,OAAO,EAAC,UAAU;QAAAL,QAAA,GAAC,WAE/C,eAAAX,OAAA;UACEiB,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,UAAU;UACbC,KAAK,EAAEb,QAAS;UAChBc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CT,SAAS,EAAC;QAAmC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRf,OAAA;QAAQuB,OAAO,EAAEf,WAAY;QAACE,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAEnF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CA5CIF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}