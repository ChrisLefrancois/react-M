{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Calendar,momentLocalizer}from'react-big-calendar';import'react-big-calendar/lib/css/react-big-calendar.css';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AdminDashboard=()=>{const localizer=momentLocalizer(moment);const[events,setEvents]=useState([]);useEffect(()=>{// Fetch booking data from the backend and update the state\nconst fetchBookingData=async()=>{try{const response=await fetch('/bookings');if(!response.ok){throw new Error(\"Error fetching booking data: \".concat(response.statusText));}const data=await response.json();setEvents(data);}catch(error){console.error(error.message);}};fetchBookingData();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsx(Calendar,{localizer:localizer,events:events,startAccessor:\"start\",endAccessor:\"end\"})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","jsx","_jsx","jsxs","_jsxs","AdminDashboard","localizer","events","setEvents","fetchBookingData","response","fetch","ok","Error","concat","statusText","data","json","error","console","message","children","startAccessor","endAccessor"],"sources":["/Users/christopherlefrancois/code/react-yoga/tailwind-yoga/frontend/src/pages/Admin.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\n\nconst AdminDashboard = () => {\n  const localizer = momentLocalizer(moment);\n\n  const [events, setEvents] = useState([]);\n\nuseEffect(() => {\n  // Fetch booking data from the backend and update the state\n  const fetchBookingData = async () => {\n    try {\n      const response = await fetch('/bookings');\n\n      if (!response.ok) {\n        throw new Error(`Error fetching booking data: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      setEvents(data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  fetchBookingData();\n}, []);\n\n  return (\n    <div>\n      <h1>Admin Dashboard</h1>\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n      />\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,OAASC,QAAQ,CAAEC,eAAe,KAAQ,oBAAoB,CAC9D,MAAO,mDAAmD,CAC1D,MAAO,CAAAC,MAAM,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,SAAS,CAAGP,eAAe,CAACC,MAAM,CAAC,CAEzC,KAAM,CAACO,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAY,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,WAAW,CAAC,CAEzC,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,iCAAAC,MAAA,CAAiCJ,QAAQ,CAACK,UAAU,CAAE,CAAC,CACxE,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClCT,SAAS,CAACQ,IAAI,CAAC,CACjB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC,CAC9B,CACF,CAAC,CAEDX,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEJ,mBACEL,KAAA,QAAAiB,QAAA,eACEnB,IAAA,OAAAmB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBnB,IAAA,CAACJ,QAAQ,EACPQ,SAAS,CAAEA,SAAU,CACrBC,MAAM,CAAEA,MAAO,CACfe,aAAa,CAAC,OAAO,CACrBC,WAAW,CAAC,KAAK,CAClB,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}