{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlefrancois/code/react-yoga/tailwind-yoga/frontend/src/pages/Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport AdminLogin from '../components/adminLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const localizer = momentLocalizer(moment);\n  const [bookings, setBookings] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [authenticated, setAuthenticated] = useState(false);\n  const handleLogin = () => {\n    setAuthenticated(true);\n  };\n  const handleLogout = () => {\n    setAuthenticated(false);\n  };\n  const openModal = event => {\n    setSelectedEvent(event);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  useEffect(() => {\n    const fetchBookings = async () => {\n      try {\n        const response = await axios.get('/api/bookings');\n        const data = response.data;\n        console.log('Fetched bookings data:', data);\n        setBookings(data);\n      } catch (error) {\n        console.error('Error fetching bookings:', error.message);\n      }\n    };\n    fetchBookings();\n  }, []);\n  const events = bookings.reduce((uniqueEvents, booking) => {\n    const parsedDate = new Date(booking.date);\n    const endTime = new Date(parsedDate.getTime() + 60 * 60 * 1000);\n\n    // Check if an event with the same start time and title already exists\n    const existingEvent = uniqueEvents.find(event => event.start.getTime() === parsedDate.getTime() && event.title === booking.yogaClass);\n\n    // If not found, add the event to the uniqueEvents array\n    if (!existingEvent) {\n      uniqueEvents.push({\n        title: booking.yogaClass,\n        // Use the class name instead of email\n        start: parsedDate,\n        end: endTime\n      });\n    }\n    return uniqueEvents;\n  }, []);\n  console.log('All Events:', events);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-8\",\n    children: authenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-6\",\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Bookings Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          localizer: localizer,\n          events: events,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          onSelectEvent: openModal,\n          style: {\n            height: 800\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onRequestClose: closeModal,\n        contentLabel: \"Booking Details\",\n        className: \"modal-content\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Booking Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: closeModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedEvent.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: bookings.filter(booking => booking.yogaClass === selectedEvent.title && moment(booking.date).isSame(selectedEvent.start, 'day')).map(booking => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: `${booking.personName} - ${booking.email}`\n            }, booking._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AdminLogin, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"9eYxYLWYZwK5fJQQ13nHHlRtRu4=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","axios","Modal","AdminLogin","jsxDEV","_jsxDEV","AdminDashboard","_s","localizer","bookings","setBookings","modalIsOpen","setModalIsOpen","selectedEvent","setSelectedEvent","authenticated","setAuthenticated","handleLogin","handleLogout","openModal","event","closeModal","fetchBookings","response","get","data","console","log","error","message","events","reduce","uniqueEvents","booking","parsedDate","Date","date","endTime","getTime","existingEvent","find","start","title","yogaClass","push","end","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","onSelectEvent","style","height","isOpen","onRequestClose","contentLabel","overlayClassName","onClick","filter","isSame","map","personName","email","_id","onLogin","_c","$RefreshReg$"],"sources":["/Users/christopherlefrancois/code/react-yoga/tailwind-yoga/frontend/src/pages/Admin.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport AdminLogin from '../components/adminLogin';\n\n\n\nconst AdminDashboard = () => {\n  const localizer = momentLocalizer(moment);\n\n  const [bookings, setBookings] = useState([]);\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [authenticated, setAuthenticated] = useState(false);\n\n\n  const handleLogin = () => {\n    setAuthenticated(true);\n  };\n\n  const handleLogout = () => {\n    setAuthenticated(false);\n  };\n\n  const openModal = (event) => {\n    setSelectedEvent(event);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      try {\n        const response = await axios.get('/api/bookings');\n        const data = response.data;\n        console.log('Fetched bookings data:', data);\n        setBookings(data);\n      } catch (error) {\n        console.error('Error fetching bookings:', error.message);\n      }\n    };\n\n    fetchBookings();\n  }, []);\n\n  const events = bookings.reduce((uniqueEvents, booking) => {\n    const parsedDate = new Date(booking.date);\n    const endTime = new Date(parsedDate.getTime() + 60 * 60 * 1000);\n\n    // Check if an event with the same start time and title already exists\n    const existingEvent = uniqueEvents.find(\n      (event) =>\n        event.start.getTime() === parsedDate.getTime() &&\n        event.title === booking.yogaClass\n    );\n\n    // If not found, add the event to the uniqueEvents array\n    if (!existingEvent) {\n      uniqueEvents.push({\n        title: booking.yogaClass, // Use the class name instead of email\n        start: parsedDate,\n        end: endTime,\n      });\n    }\n\n    return uniqueEvents;\n  }, []);\n\n\n\n  console.log('All Events:', events);\n\n  return (\n    <div className=\"container mx-auto p-8\">\n      {authenticated ? (\n        <div>\n          <h1 className=\"text-4xl font-bold mb-6\">Admin Dashboard</h1>\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Bookings Calendar</h2>\n            <Calendar\n              localizer={localizer}\n              events={events}\n              startAccessor=\"start\"\n              endAccessor=\"end\"\n              onSelectEvent={openModal}\n              style={{ height: 800 }}\n            />\n          </div>\n\n          {/* Modal for displaying booking details */}\n          <Modal\n            isOpen={modalIsOpen}\n            onRequestClose={closeModal}\n            contentLabel=\"Booking Details\"\n            className=\"modal-content\"\n            overlayClassName=\"modal-overlay\"\n          >\n            <div className=\"modal-header\">\n              <h2>Booking Details</h2>\n              <button className=\"close-button\" onClick={closeModal}>\n                Close\n              </button>\n            </div>\n            {selectedEvent && (\n              <div className=\"modal-body\">\n                <h3>{selectedEvent.title}</h3>\n                <ul>\n                  {bookings\n                    .filter(\n                      (booking) =>\n                        booking.yogaClass === selectedEvent.title &&\n                        moment(booking.date).isSame(selectedEvent.start, 'day')\n                    )\n                    .map((booking) => (\n                      <li key={booking._id}>\n                        {`${booking.personName} - ${booking.email}`}\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            )}\n          </Modal>\n\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n      ) : (\n        <AdminLogin onLogin={handleLogin} />\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAO,mDAAmD;AAC1D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,SAAS,GAAGT,eAAe,CAACC,MAAM,CAAC;EAEzC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAGzD,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxBD,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBF,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMG,SAAS,GAAIC,KAAK,IAAK;IAC3BN,gBAAgB,CAACM,KAAK,CAAC;IACvBR,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBT,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAGDf,SAAS,CAAC,MAAM;IACd,MAAMyB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,eAAe,CAAC;QACjD,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAC1BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,IAAI,CAAC;QAC3Cf,WAAW,CAACe,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC1D;IACF,CAAC;IAEDP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,MAAM,GAAGrB,QAAQ,CAACsB,MAAM,CAAC,CAACC,YAAY,EAAEC,OAAO,KAAK;IACxD,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACF,OAAO,CAACG,IAAI,CAAC;IACzC,MAAMC,OAAO,GAAG,IAAIF,IAAI,CAACD,UAAU,CAACI,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;;IAE/D;IACA,MAAMC,aAAa,GAAGP,YAAY,CAACQ,IAAI,CACpCpB,KAAK,IACJA,KAAK,CAACqB,KAAK,CAACH,OAAO,CAAC,CAAC,KAAKJ,UAAU,CAACI,OAAO,CAAC,CAAC,IAC9ClB,KAAK,CAACsB,KAAK,KAAKT,OAAO,CAACU,SAC5B,CAAC;;IAED;IACA,IAAI,CAACJ,aAAa,EAAE;MAClBP,YAAY,CAACY,IAAI,CAAC;QAChBF,KAAK,EAAET,OAAO,CAACU,SAAS;QAAE;QAC1BF,KAAK,EAAEP,UAAU;QACjBW,GAAG,EAAER;MACP,CAAC,CAAC;IACJ;IAEA,OAAOL,YAAY;EACrB,CAAC,EAAE,EAAE,CAAC;EAINN,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEG,MAAM,CAAC;EAElC,oBACEzB,OAAA;IAAKyC,SAAS,EAAC,uBAAuB;IAAAC,QAAA,EACnChC,aAAa,gBACZV,OAAA;MAAA0C,QAAA,gBACE1C,OAAA;QAAIyC,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5D9C,OAAA;QAAKyC,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAChD1C,OAAA;UAAIyC,SAAS,EAAC,0CAA0C;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/E9C,OAAA,CAACP,QAAQ;UACPU,SAAS,EAAEA,SAAU;UACrBsB,MAAM,EAAEA,MAAO;UACfsB,aAAa,EAAC,OAAO;UACrBC,WAAW,EAAC,KAAK;UACjBC,aAAa,EAAEnC,SAAU;UACzBoC,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAI;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN9C,OAAA,CAACH,KAAK;QACJuD,MAAM,EAAE9C,WAAY;QACpB+C,cAAc,EAAErC,UAAW;QAC3BsC,YAAY,EAAC,iBAAiB;QAC9Bb,SAAS,EAAC,eAAe;QACzBc,gBAAgB,EAAC,eAAe;QAAAb,QAAA,gBAEhC1C,OAAA;UAAKyC,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B1C,OAAA;YAAA0C,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxB9C,OAAA;YAAQyC,SAAS,EAAC,cAAc;YAACe,OAAO,EAAExC,UAAW;YAAA0B,QAAA,EAAC;UAEtD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EACLtC,aAAa,iBACZR,OAAA;UAAKyC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB1C,OAAA;YAAA0C,QAAA,EAAKlC,aAAa,CAAC6B;UAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9B9C,OAAA;YAAA0C,QAAA,EACGtC,QAAQ,CACNqD,MAAM,CACJ7B,OAAO,IACNA,OAAO,CAACU,SAAS,KAAK9B,aAAa,CAAC6B,KAAK,IACzC1C,MAAM,CAACiC,OAAO,CAACG,IAAI,CAAC,CAAC2B,MAAM,CAAClD,aAAa,CAAC4B,KAAK,EAAE,KAAK,CAC1D,CAAC,CACAuB,GAAG,CAAE/B,OAAO,iBACX5B,OAAA;cAAA0C,QAAA,EACI,GAAEd,OAAO,CAACgC,UAAW,MAAKhC,OAAO,CAACiC,KAAM;YAAC,GADpCjC,OAAO,CAACkC,GAAG;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEhB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAER9C,OAAA;QAAQwD,OAAO,EAAE3C,YAAa;QAAA6B,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,gBAEN9C,OAAA,CAACF,UAAU;MAACiE,OAAO,EAAEnD;IAAY;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACpC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAhIID,cAAc;AAAA+D,EAAA,GAAd/D,cAAc;AAkIpB,eAAeA,cAAc;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}